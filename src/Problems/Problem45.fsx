module Euler.Problem45

(* Triangle, pentagonal, and hexagonal numbers are generated by the following
formulae:

Triangle Tn = n(n+1)/2 = 1, 3, 6, 10, 15, ... 
Pentagonal Pn = n(3n−1)/2 = 1, 5, 12, 22, 35, ... 
Hexagonal Hn = n(2n−1) = 1, 6, 15, 28, 45, ... 

It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.*)

open System

let hexagonalNumbers =
    Seq.initInfinite ((+) 1)
    |> Seq.map (fun n -> n * (2 * n - 1))

let isPentagonal Pn =
    let n = (0.5 + sqrt (0.25 + 6. * float Pn)) / 3.
    n = Math.Truncate n

// All hexagonal numbers are also triangle numbers
let solution =
    hexagonalNumbers
    |> Seq.skip 143
    |> Seq.find isPentagonal
