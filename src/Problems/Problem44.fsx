module Euler.Problem44

(* Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 −
22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of
D?*)

open System

let pentagonalNumbers =
    Seq.initInfinite ((+) 1)
    |> Seq.map (fun n -> n * (3 * n - 1) / 2)

let isPentagonal Pn =
    let n = (0.5 + sqrt (0.25 + 6. * (float Pn))) / 3.
    n = Math.Truncate n

let solution =
    pentagonalNumbers
    |> Seq.mapi (fun i n -> n, Seq.take i pentagonalNumbers)
    |> Seq.pick (fun (a, ns) ->
        ns
        |> Seq.tryFindBack (fun b -> isPentagonal (a + b) && isPentagonal (a - b))
        |> Option.map ((-) a))
